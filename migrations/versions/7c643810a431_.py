"""empty message

Revision ID: 7c643810a431
Revises: fc7b2d00d274
Create Date: 2023-09-11 08:58:22.949148

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7c643810a431"
down_revision = "fc7b2d00d274"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index("ix_users_email")

    op.drop_table("users")
    op.drop_table("recipes")
    op.drop_table("categories")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('categories_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=32), autoincrement=False, nullable=True),
        sa.Column(
            "description", sa.VARCHAR(length=32), autoincrement=False, nullable=True
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "date_created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "date_modified", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="categories_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="categories_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "recipes",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=32), autoincrement=False, nullable=True),
        sa.Column(
            "ingredients", sa.VARCHAR(length=400), autoincrement=False, nullable=True
        ),
        sa.Column(
            "directions", sa.VARCHAR(length=400), autoincrement=False, nullable=True
        ),
        sa.Column("category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "date_created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "date_modified", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["category_id"], ["categories.id"], name="recipes_category_id_fkey"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="recipes_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="recipes_pkey"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email", sa.VARCHAR(length=32), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(length=32), autoincrement=False, nullable=True),
        sa.Column(
            "password_hash", sa.VARCHAR(length=128), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index("ix_users_email", ["email"], unique=False)

    # ### end Alembic commands ###
